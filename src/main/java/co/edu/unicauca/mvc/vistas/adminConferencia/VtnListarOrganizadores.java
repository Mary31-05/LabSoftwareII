package co.edu.unicauca.mvc.vistas.adminConferencia;

import co.edu.unicauca.mvc.controladores.ServicioAlmacenamientoOrganizadores;
import co.edu.unicauca.mvc.modelos.Organizador;
import java.util.LinkedList;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Clase VtnListarOrganizadores
 * Esta clase define la ventana interna que se encarga de listar los organizadores
 * almacenados en el sistema. Permite mostrar la información de los organizadores
 * en una tabla y proporciona opciones para actualizar y registrar nuevos organizadores.
 * 
 * @autor Usuario
 */
public class VtnListarOrganizadores extends javax.swing.JInternalFrame {
    /**
     * Servicio que gestiona la lógica de almacenamiento de los organizadores.
     */
    private ServicioAlmacenamientoOrganizadores objServicioAlmacenamientoOrganizadores;
    
    /**
     * Constructor de la clase. Inicializa los componentes de la interfaz y el servicio
     * de almacenamiento de organizadores.
     * 
     * @param objServicioAlmacenamientoOrganizadores Instancia del servicio que maneja
     *                                               el almacenamiento de los organizadores.
     */
    public VtnListarOrganizadores(ServicioAlmacenamientoOrganizadores objServicioAlmacenamientoOrganizadores) {
        initComponents();
        this.objServicioAlmacenamientoOrganizadores =objServicioAlmacenamientoOrganizadores;
        iniciarlizarTabla();
    }
     /**
     * Inicializa la tabla donde se mostrará la lista de organizadores. Configura
     * las columnas de la tabla.
     */
    private void iniciarlizarTabla()
    {
       DefaultTableModel model= new DefaultTableModel();       
       model.addColumn("Nombre Organizador");       
       model.addColumn("Apellido Organizador");
       model.addColumn("Universidad");
       this.jTableListadoOrganizadores.setModel(model);
    }
    /**
     * Limpia el contenido de la tabla de organizadores, eliminando todas las filas.
     */
    public void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableListadoOrganizadores.getModel();
        int filas = this.jTableListadoOrganizadores.getRowCount();
        for (int i = 0; filas > i; i++) {
            modelo.removeRow(0);
        }        
    }
    /**
     * Llena la tabla de organizadores con los datos obtenidos desde el servicio
     * de almacenamiento de organizadores.
     */
    public void llenarTabla() {
        DefaultTableModel model = (DefaultTableModel) this.jTableListadoOrganizadores.getModel();
        limpiarTabla();
        LinkedList<Organizador> listaOrganizadores = (LinkedList<Organizador>) this.objServicioAlmacenamientoOrganizadores.listarOrganizador();
        
        for (int i = 0; i < listaOrganizadores.size(); i++) {
            String[] fila = { 
                listaOrganizadores.get(i).getNombre(), 
                listaOrganizadores.get(i).getApellido(), 
                listaOrganizadores.get(i).getUniversidad()
            };
            model.addRow(fila);
        }
    }
    
        public JTable getListadoOrganizadoresTable() {
        return jTableListadoOrganizadores;
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonActualizar = new javax.swing.JButton();
        jButtonRegistrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListadoOrganizadores = new javax.swing.JTable();

        jLabel1.setText("Listar Organizadores");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel1)
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 555, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonRegistrar.setText("Registrar Organizadores");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jTableListadoOrganizadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableListadoOrganizadores);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRegistrar)
                .addGap(45, 45, 45))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButtonActualizar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonRegistrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        llenarTabla();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        VtnRegistrarOrganizadores objVtnRegistrarOrganizadores=  new VtnRegistrarOrganizadores(this.objServicioAlmacenamientoOrganizadores);
        objVtnRegistrarOrganizadores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        objVtnRegistrarOrganizadores.setVisible(true);
    }//GEN-LAST:event_jButtonRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListadoOrganizadores;
    // End of variables declaration//GEN-END:variables
}
